// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Event {
  id               String     @id @default(uuid())
  title            String
  details          String?
  slug             String     @unique
  maximumAttendees Int?       @map("maximum_attendees")
  attendees        Attendee[] // só para o prisma entender que há um relacionamento, não é uma coluna

  @@map("events")
}

// http://localhost:3333/events/b3668f0c-3694-4329-a7cf-ba8b3ead59d5 -> without slug
// http://localhost:3333/events/nlw-unite -> with slug

model Attendee {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  createdAt DateTime @default(now()) @map("created_at")
  eventId   String   @map("event_id") // coluna de relação

  event   Event    @relation(fields: [eventId], references: [id], onDelete: Cascade) // relacionamento do campo id da table Event com eventId da table Attendee
  checkIn CheckIn?

  @@unique([eventId, email]) // cria uma constraint diz que dentro da table Attendee só pode ter a combinação de um email dentro de um
  // evento uma única vez, porém, não é legal deixar o banco de dados ser a regra de negócios
  @@map("attendees")
}

model CheckIn {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  attendeeId Int      @unique @map("attendee_id")

  attende Attendee @relation(fields: [attendeeId], references: [id], onDelete: Cascade)

  @@map("check_ins")
}
